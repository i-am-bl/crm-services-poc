from datetime import date
from uuid import UUID

from sqlalchemy import UUID, Date, Integer, text, ForeignKey
from sqlalchemy.orm import Mapped, mapped_column, relationship

from .sys_base import SysBase


class AccountProducts(SysBase):
    """
    Represents a product linked to an account in the sales system.

    This SQL Alchemy model stores the relationship between accounts and products, including metadata such as start and end dates.

    ivars:
        id: The primary key of the account product.
        :vartype id: int
        uuid: Unique identifier for the account product, generated by the database.
        :vartype uuid: UUID
        account_uuid: Foreign key referencing the associated account.
        :vartype account_uuid: UUID
        product_uuid: Foreign key referencing the associated product.
        :vartype product_uuid: UUID
        start_on: The start date of the product in relation to the account.
        :vartype start_on: date
        end_on: The end date of the product in relation to the account.
        :vartype end_on: date
        account: Relationship to the `Accounts` model.
        :vartype account: Accounts
        product: Relationship to the `Products` model.
        :vartype product: Products
    """

    __tablename__ = "acc_account_products"
    __table_args__ = {"schema": "sales"}

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, nullable=False, autoincrement=True
    )
    uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True),
        nullable=False,
        unique=True,
        server_default=text("gen_random_uuid()"),
    )

    account_uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True), ForeignKey(column="sales.acc_accounts.uuid"), nullable=False
    )
    product_uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True), ForeignKey(column="sales.pm_products.uuid"), nullable=False
    )

    start_on: Mapped[date] = mapped_column(Date, nullable=False)
    end_on: Mapped[date] = mapped_column(Date, nullable=False)

    # Parent relationships
    account = relationship("Accounts", back_populates="account_products")
    product = relationship("Products", back_populates="account_products")
