from uuid import UUID

from sqlalchemy import UUID, Integer, String, text, ForeignKey
from sqlalchemy.orm import Mapped, mapped_column, relationship

from .sys_base import SysBase


class Websites(SysBase):
    """
    This SQLAlchemy model represents a website associated with an entity, containing details
    such as the website's URL, description, and associated entity.

    ivars:
        id: The primary key of the website record.
        :vartype id: int
        uuid: Unique identifier for the website, generated by the database.
        :vartype uuid: UUID
        entity_uuid: Foreign key referencing the associated entity.
        :vartype entity_uuid: UUID
        sys_value_type_uuid: An optional identifier for the system value type.
        :vartype sys_value_type_uuid: UUID, optional
        url: The URL of the website (e.g., "https://example.com").
        :vartype url: str
        description: An optional description of the website.
        :vartype description: str, optional
        entity: Relationship to the `Entities` model.
        :vartype entity: Entities
    """

    __tablename__ = "em_websites"
    __table_args__ = {"schema": "sales"}

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, nullable=False, autoincrement=True
    )
    uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True), nullable=False, server_default=text("gen_random_uuid()")
    )

    entity_uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True), ForeignKey(column="sales.em_entities.uuid"), nullable=False
    )
    sys_value_type_uuid: Mapped[UUID] = mapped_column(UUID(as_uuid=True), nullable=True)

    url: Mapped[str] = mapped_column(String(325), nullable=False)
    description: Mapped[str] = mapped_column(String(255), nullable=True)

    # Parent relationships
    entity = relationship("Entities", back_populates="websites")
