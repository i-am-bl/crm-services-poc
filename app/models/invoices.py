from uuid import UUID

from colorama import Fore
from sqlalchemy import UUID, Date, ForeignKey, Integer, text
from sqlalchemy.orm import Mapped, mapped_column, relationship

from .sys_base import SysBase


class Invoices(SysBase):
    """
    Represents an invoice, including details like the associated order, its status,
    and the transaction, posting, and payment dates. This model tracks the various stages
    of an invoice's lifecycle, from creation to payment, and establishes relationships
    with the `Orders` and `InvoiceItems` models.

    ivars:
        id: The primary key of the invoice record.
        :vartype id: int
        uuid: Unique identifier for the invoice, automatically generated by the database.
        :vartype uuid: UUID
        order_uuid: Foreign key linking the invoice to a specific order.
        :vartype order_uuid: UUID
        sys_value_status_uuid: Foreign key representing the current status of the invoice (e.g., unpaid, paid, etc.).
        :vartype sys_value_status_uuid: UUID
        transacted_on: The date when the invoice was created or transacted.
        :vartype transacted_on: date, optional
        posted_on: The date when the invoice was posted to the system.
        :vartype posted_on: date, optional
        paid_on: The date when the invoice was marked as paid.
        :vartype paid_on: date, optional
        order: Relationship to the `Orders` model, linking the invoice to its associated order.
        :vartype order: Orders
        invoice_items: Relationship to the `InvoiceItems` model, representing the items associated with this invoice.
        :vartype invoice_items: list of InvoiceItems
    """

    __tablename__ = "om_invoices"
    __table_args__ = {"schema": "sales"}

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, nullable=False, autoincrement=True
    )
    uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True), nullable=False, server_default=text("gen_random_uuid()")
    )

    order_uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True),
        ForeignKey(column="sales._om_sales.orders.uuid"),
        nullable=False,
    )
    sys_value_status_uuid: Mapped[UUID] = mapped_column(
        UUID(as_uuid=True), nullable=False
    )

    transacted_on: Mapped[Date] = mapped_column(Date, nullable=True)
    posted_on: Mapped[Date] = mapped_column(Date, nullable=True)
    paid_on: Mapped[Date] = mapped_column(Date, nullable=True)

    # Parent relationships
    order = relationship("Orders", back_populates="invoices")
    # Child relationships
    invoice_items = relationship("InvoiceItems", back_populates="invoice")
