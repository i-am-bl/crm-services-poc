from uuid import uuid4

from pydantic import UUID4
from sqlalchemy import UUID, Integer, String, text
from sqlalchemy.orm import Mapped, mapped_column

from .sys_base import SysBase


class Addresses(SysBase):
    """
    Represents an address associated with a specific entity in the system.
    The `Addresses` model captures detailed address information, including address lines, city, state,
    country, and postal code, while also establishing relationships to the parent entity it belongs to.

    ivars:
        id: The primary key of the address record.
        :vartype id: int
        uuid: Unique identifier for the address, generated by the database.
        :vartype uuid: UUID
        parent_uuid: The UUID of the parent entity associated with the address.
        :vartype parent_uuid: UUID
        parent_table: The name of the table where the parent entity is stored (e.g., "Customers").
        :vartype parent_table: str
        sys_value_type_uuid: The UUID representing the type of address (e.g., "billing" or "shipping").
        :vartype sys_value_type_uuid: UUID
        address_line1: The first line of the address (e.g., street address).
        :vartype address_line1: str, optional
        address_line2: The second line of the address (e.g., apartment, suite, or building).
        :vartype address_line2: str, optional
        city: The city where the address is located.
        :vartype city: str, optional
        county: The county where the address is located.
        :vartype county: str, optional
        state: The state or province where the address is located.
        :vartype state: str, optional
        country: The country where the address is located.
        :vartype country: str, optional
        zip: The 5-digit postal code for the address.
        :vartype zip: str, optional
        zip_plus4: The optional 4-digit extension of the postal code (if applicable).
        :vartype zip_plus4: str, optional
    """

    __tablename__ = "em_addresses"
    __table_args__ = {"schema": "sales"}

    id: Mapped[int] = mapped_column(
        Integer, primary_key=True, autoincrement=True, nullable=False
    )
    uuid: Mapped[uuid4] = mapped_column(
        UUID(as_uuid=True),
        unique=True,
        nullable=False,
        server_default=text("gen_random_uuid()"),
    )

    parent_uuid: Mapped[uuid4] = mapped_column(UUID(as_uuid=True), nullable=False)
    parent_table: Mapped[str] = mapped_column(String(50), nullable=False)
    sys_value_type_uuid: Mapped[uuid4] = mapped_column(
        UUID(as_uuid=True), nullable=False
    )

    address_line1: Mapped[str] = mapped_column(String(325), nullable=True)
    address_line2: Mapped[str] = mapped_column(String(325), nullable=True)
    city: Mapped[str] = mapped_column(String(325), nullable=True)
    county: Mapped[str] = mapped_column(String(325), nullable=True)
    state: Mapped[str] = mapped_column(String(325), nullable=True)
    country: Mapped[str] = mapped_column(String(325), nullable=True)
    zip: Mapped[str] = mapped_column(String(5), nullable=True)
    zip_plus4: Mapped[str] = mapped_column(String(4), nullable=True)
